//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.01 at 02:53:28 AM CEST 
//


package me.antoniocaccamo.player.rx.model.legacy.sequences;



import me.antoniocaccamo.player.rx.model.legacy.JaxbAstratModel;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.annotation.Generated;
import javax.xml.bind.annotation.*;
import java.io.File;
import java.io.RandomAccessFile;
import java.math.BigInteger;
import java.nio.channels.FileChannel;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;


/**
 * <p>Java class for sequenceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="sequenceType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{http://sequencemovieplayer.antanysavage.it/sequences/schema}videos"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="remotePath" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "sequenceType", propOrder = {
    "videos"
})
@Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
public class SequenceType extends JaxbAstratModel {

    @XmlElement(required = true)
    @Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
    protected VideosType videos;
    @XmlAttribute(name = "name")
    @Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
    protected String name;
    @XmlAttribute(name = "remotePath")
    @Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
    protected String remotePath;

    /**
     * Gets the value of the videos property.
     * 
     * @return
     *     possible object is
     *     {@link VideosType }
     *     
     */
    @Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
    public VideosType getVideos() {
        return videos;
    }

    /**
     * Sets the value of the videos property.
     * 
     * @param value
     *     allowed object is
     *     {@link VideosType }
     *     
     */
    @Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
    public void setVideos(VideosType value) {
        this.videos = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    @Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the remotePath property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
    public String getRemotePath() {
        return remotePath;
    }

    /**
     * Sets the value of the remotePath property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    @Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
    public void setRemotePath(String value) {
        this.remotePath = value;
    }


    /*
     * ------------------------------------------------------------------------
     *
     * ------------------------------------------------------------------------
     */
    private static final Logger logger = LoggerFactory.getLogger(SequenceType.class);
    @XmlTransient
    private Lock MY_LOCK = new ReentrantLock();
    @XmlTransient
    private File        localFile   = null;
    @XmlTransient
    private FileChannel fileChannel = null;
    @XmlTransient
    private ScheduledExecutorService executor = null;


    @Override
    public void postConstruct() throws Exception {
        getVideos()
                .getVideo()
                .stream()
                .forEach(el -> {
                            try {
                                el.postConstruct();
                            } catch (Exception e) {
                                throw new IllegalArgumentException(e);
                            }
                        }
                );


        if (isRemote()) {
            File lock = new File(localFile.getAbsolutePath() + ".lock");
            fileChannel = new RandomAccessFile(lock, "rw").getChannel();
            executor = Executors.newSingleThreadScheduledExecutor();
            executor.scheduleWithFixedDelay(
                    new SequenceTypeUploadRunnbale(this),
                    10000,
              //      Utils.hours2millis(Player.APP_FTP_REFRESH),
                    300,
                    TimeUnit.MILLISECONDS
            );

        }

    }

    boolean isRemote(){
        return StringUtils.isNotEmpty(remotePath);
    }

    @Override
    protected void finalize() throws Throwable {
        if (fileChannel != null) {
            fileChannel.close();
        }
        if ( executor !=null )
            executor.shutdown();
    }

    public synchronized String getDuration() {
        MY_LOCK.lock();
        try {
            double duration = getVideos().getVideo()
                    .stream()
                    .mapToDouble(el -> el.getDuration())
                    .sum()
            ;

            return String.valueOf(duration);
        } finally {
            MY_LOCK.unlock();
        }
    }

    private void swap(int startIndex, int destIndex) {
        VideoType tmp01 = getVideos().getVideo().get(startIndex);
        VideoType tmp02 = getVideos().getVideo().get(destIndex);
        getVideos().getVideo().set(destIndex, tmp01);
        getVideos().getVideo().set(startIndex, tmp02);
        BigInteger tmp = tmp01.getId();
        tmp01.setId(tmp02.getId());
        tmp02.setId(tmp);
    }

    private class SequenceTypeUploadRunnbale implements Runnable {

        private final SequenceType sequenceType;

        private SequenceTypeUploadRunnbale(SequenceType sequenceType) {
            this.sequenceType = sequenceType;
        }


        @Override
        public void run() {

        }
    }


    @Override
    public String toString() {
        return new ToStringBuilder(this, ToStringStyle.JSON_STYLE)
                .append("remotePath", remotePath)
                .append("name", name)
                .append("videos", videos)
                .toString();
    }
}
