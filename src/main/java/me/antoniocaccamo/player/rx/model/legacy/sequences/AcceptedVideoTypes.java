//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.01 at 02:53:28 AM CEST 
//


package me.antoniocaccamo.player.rx.model.legacy.sequences;

import javax.annotation.Generated;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for acceptedVideoTypes.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="acceptedVideoTypes"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Video"/&gt;
 *     &lt;enumeration value="HiddenWindow"/&gt;
 *     &lt;enumeration value="BlackWindow"/&gt;
 *     &lt;enumeration value="Watch"/&gt;
 *     &lt;enumeration value="Photo"/&gt;
 *     &lt;enumeration value="Browser"/&gt;
 *     &lt;enumeration value="Weather"/&gt;
 *     &lt;enumeration value="FTPVideo"/&gt;
 *     &lt;enumeration value="FTPImage"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "acceptedVideoTypes")
@XmlEnum
@Generated(value = "com.sun.tools.xjc.Driver", date = "2019-05-01T02:53:28+02:00", comments = "JAXB RI v2.3.0")
public enum AcceptedVideoTypes {

    @XmlEnumValue("Video")
    VIDEO("Video"),
    @XmlEnumValue("HiddenWindow")
    HIDDEN_WINDOW("HiddenWindow"),
    @XmlEnumValue("BlackWindow")
    BLACK_WINDOW("BlackWindow"),
    @XmlEnumValue("Watch")
    WATCH("Watch"),
    @XmlEnumValue("Photo")
    PHOTO("Photo"),
    @XmlEnumValue("Browser")
    BROWSER("Browser"),
    @XmlEnumValue("Weather")
    WEATHER("Weather"),
    @XmlEnumValue("FTPVideo")
    FTP_VIDEO("FTPVideo"),
    @XmlEnumValue("FTPImage")
    FTP_IMAGE("FTPImage");
    private final String value;

    AcceptedVideoTypes(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AcceptedVideoTypes fromValue(String v) {
        for (AcceptedVideoTypes c: AcceptedVideoTypes.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
